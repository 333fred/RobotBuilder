## This file describes the palette for RobotBuilder. The format is
## YAML 1.1 (http://www.yaml.org/) pre-processed with Velocity macros
## (velocity.apache.org). This file is broken into three sections:
##
## - The macros for generating common types.
##
##   The macros are very simple, they define a simple template that
##   gets substituted where they are called, with substitution
##   where-ever the dollar sign sigil appears before a variable
##   name. For more information, see:
##   velocity.apache.org/engine/devel/user-guide.html#Velocimacro_Miscellany
##
##   NOTE: Be very careful about white space and macros, YAML is white
##   space sensitive.
##
##   They are defined as:
##   #macro( macroname $arg1 $arg2 ... $argN )
##      [body]
##   #end
##
##   They are called as:
##   #macroname($var1 $var2 ... $varN)
##
## - The validators for ensuring that certain properties are unique.
##
##   The validators control if and how a property is validated. The
##   only currently supported validator type is unique, though more
##   will be added in the future.
##
##   They are define as:
##   - !Validator
##     name: A name for this validator, must be unique among validators.
##     type: Unique is currently the only  supported type
##     fields: A list of fields that the combination of should be unique.
##
## - The palette
##
##   The palette is broken into multiple sections. Each section
##   contains a list of components that should be displayed in that
##   section.
##
##   A component is defined as:
##   - !Component
##     name: The unique name of this component
##     type: The type of this component
##     supports: Optional. A map of the types supported and the number
##               supported. -1 denotes unlimited.
##     help: Tooltip helf for this component, it shows up when the
##           mouse hovers.
##     properties: A list of properties
##
##   A property is defined as:
##   - !Property
##     name: The name of this property, should be unique within this component
##     type: The type of this property, affects how it is displayed.
##           Valid types include: Integer, Double, Boolean, String, File,
##           Folder, Subsystem, Command, Sensor, Actuator.
##     choices: Optional. List of choices to present to the user.
##     validator: Optional. The validator that should be used to
##                validate this property.
##     default: The default value when no other is presented.

## Macros:
#macro( AnalogInput $Name )
- !ChoicesProperty
            name: $Name Module (Analog)
            choices: ["1", "2"]
            validators: [AnalogInput]
            default: "1"
          - !ChoicesProperty
            name: $Name Channel (Analog)
            choices: ["1", "2", "3", "4", "5", "6", "7", "8"]
            validators: [AnalogInput]
            default: "1"
#end
#macro( DigitalChannel $Name )
- !ChoicesProperty
            name: $Name Module (Digital)
            choices: ["1", "2"]
            validators: [DigitalChannel]
            default: "1"
          - !ChoicesProperty
            name: $Name Channel (Digital)
            validators: [DigitalChannel]
            choices: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "12", "13", "14"]
            default: "1"
#end
#macro( PWMOutput $Name )          
- !ChoicesProperty
            name: $Name Module (Digital)
            choices: ["1", "2"]
            validators: [PWMOutput]
            default: "1"
          - !ChoicesProperty
            name: $Name Channel (PWM)
            validators: [PWMOutput]
            choices: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"]
            default: "1"
#end
#macro( RelayOutput $Name )          
- !ChoicesProperty
            name: $Name Module (Digital)
            choices: ["1", "2"]
            validators: [RelayOutput]
            default: "1"
          - !ChoicesProperty
            name: $Name Channel (Relay)
            validators: [RelayOutput]
            choices: ["1", "2", "3", "4", "5", "6", "7", "8"]
            default: "1"
#end
#macro( Button $Name )
- !Property
            name: $Name Command
            type: Command
            default: "1"
          - !ChoicesProperty
            name: $Name When to Run
            choices: [whileHeld, whenPressed, whenReleased]
            default: whileHeld
#end
#macro( Solenoid $Name )
- !ChoicesProperty
            name: $Name Module
            validators: [Solenoid]
            choices: ["1", "2"]
            default: "1"
          - !ChoicesProperty
            name: $Name Channel
            validators: [Solenoid]
            choices: ["1", "2", "3", "4", "5", "6", "7", "8"]
            default: "1"
#end            

Validators:
  - !ExistsValidator
    name: DropdownSelected
    ignore: [null, "null", "", "0", "No Choices Available"]
  - !UniqueValidator
    name: AnalogInput
    fields: [Channel (Analog), Module (Analog)]
  - !UniqueValidator
    name: AnalogInput
    fields: [Channel (Analog), Module (Analog)]
  - !UniqueValidator
    name: DigitalChannel
    fields: [Channel (Digital), Module (Digital)]
  - !UniqueValidator
    name: PWMOutput
    fields: [Channel (PWM), Module (Digital)]
  - !UniqueValidator
    name: Joystick
    fields: [Number]
  - !UniqueValidator
    name: KinectJoystick
    fields: [Number]
  - !UniqueValidator
    name: RelayOutput
    fields: [Channel (Relay), Module (Digital)]
  - !UniqueValidator
    name: Solenoid
    fields: [Channel, Module]
  - !UniqueValidator
    name: NetworkButton
    fields: [String, String]
    
Palette:
  - Hidden:
      - !Component
        name: Robot
        type: Robot
        supports: {Subsystems: 1, OI: 1, Commands: 1}
        help: Your Robot!
        properties:
          - !FileProperty
            name: Java Project
            extension: null
            folder: true
            default: ""
          - !StringProperty
            name: Java Package
            default: ""
          - !BooleanProperty
            name: Export Subsystems
            default: true
          - !BooleanProperty
            name: Export Commands
            default: true
          - !FileProperty
            name: Wiring File
            extension: html
            folder: false
            default: ""
      - !Component
        name: Subsystems
        type: Subsystems
        supports: {Subsystem: -1}
        help: The subsystems that make up your robot.
        properties: []
      - !Component
        name: OI
        type: OI
        supports: {Button: -1, Joystick: -1}
        help: Your operator interface!
        properties: []
      - !Component
        name: Commands
        type: Commands
        supports: {Command: -1}
        help: The commands that control what actions your robot performs.
        properties: []
        
  - Subsystems:
      - !Component
        name: Subsystem
        type: Subsystem
        supports: {Sensor: -1, Actuator: -1, Controller: -1, Pneumatic: -1}
        help: A functional part of your robot that groups the sensors and actuators together.
        properties:
          - !Property
            name: Default Command
            type: Command
            default: "None"
      - !Component
        name: PID Subsystem
        type: Subsystem
        supports: {Sensor: 1, Actuator: 1, Controller: -1, Pneumatic: 0}
        help: A PID Subsystem is one that uses a PID loop almost constantly.
        properties:
          - !Property
            name: Default Command
            type: Command
            default: "None"
          - !Property
            name: Send to SmartDashboard
            type: Boolean
            default: "false"
          - !Property
            name: Input
            type: Sensor
            default: "0"
          - !Property
            name: Output
            type: Actuator
            default: "0"
          - !Property
            name: P
            type: Double
            default: "1"
          - !Property
            name: I
            type: Double
            default: "0"
          - !Property
            name: D
            type: Double
            default: "0"
          - !Property
            name: F
            type: Double
            default: "0"
          - !Property
            name: Period
            type: Integer
            default: "50"
          - !Property
            name: Continuous
            type: Boolean
            default: "false"
          - !Property
            name: Limit Input
            type: Boolean
            default: "false"
          - !Property
            name: Minimum Input
            type: Double
            default: "0"
          - !Property
            name: Maximum Input
            type: Double
            default: "5"
          - !Property
            name: Limit Output
            type: Boolean
            default: "false"
          - !Property
            name: Minimum Output
            type: Double
            default: "-1"
          - !Property
            name: Maximum Output
            type: Double
            default: "1"
            
  - Controllers:
      - !Component
        name: PID Controller
        type: Controller
        supports: {Sensor: 1, Actuator: 1}
        help: PIDControllers allow control of an actuator based off of feedback from a sensor.
        properties:
          - !BooleanProperty
            name: Send to SmartDashboard
            default: false
          - !Property
            name: Input
            type: Sensor
            validators: [DropdownSelected]
            default: "0"
          - !Property
            name: Output
            type: Actuator
            validators: [DropdownSelected]
            default: "0"
          - !DoubleProperty
            name: P
            default: 1
          - !DoubleProperty
            name: I
            default: 0
          - !DoubleProperty
            name: D
            default: 0
          - !DoubleProperty
            name: F
            default: 0
          - !DoubleProperty
            name: Period
            default: 50
          - !BooleanProperty
            name: Continuous
            default: false
          - !BooleanProperty
            name: Limit Input
            default: false
          - !DoubleProperty
            name: Minimum Input
            default: 0
          - !DoubleProperty
            name: Maximum Input
            default: 5
          - !BooleanProperty
            name: Limit Output
            default: false
          - !DoubleProperty
            name: Minimum Output
            default: -1
          - !DoubleProperty
            name: Maximum Output
            default: 1
      - !Component
        name: Robot Drive 2
        type: Controller
        supports: {Actuator: 2}
        help: RobotDrive handles tank drive, arcade drive and mecanum drive.
        properties:
          - !Property
            name: Left Motor
            type: Actuator
            validators: [DropdownSelected]
            default: "0"
          - !BooleanProperty
            name: Left Motor Inverted
            default: false
          - !Property
            name: Right Motor
            type: Actuator
            validators: [DropdownSelected]
            default: "1"
          - !BooleanProperty
            name: Right Motor Inverted
            default: false
          - !DoubleProperty
            name: Sensitivity
            default: 0.5
          - !DoubleProperty
            name: Maximum Output
            default: 1
          - !BooleanProperty
            name: Safety Enabled
            default: true
          - !DoubleProperty
            name: Safety Expiration Time
            default: .1
      - !Component
        name: Robot Drive 4
        type: Controller
        supports: {"Actuator": 4}
        help: RobotDrive handles tank drive, arcade drive and mecanum drive.
        properties:
          - !Property
            name: Left Front Motor
            type: Actuator
            validators: [DropdownSelected]
            default: "0"
          - !BooleanProperty
            name: Left Front Motor Inverted
            default: false
          - !Property
            name: Left Rear Motor
            type: Actuator
            validators: [DropdownSelected]
            default: "1"
          - !BooleanProperty
            name: Left Rear Motor Inverted
            default: false
          - !Property
            name: Right Front Motor
            type: Actuator
            validators: [DropdownSelected]
            default: "2"
          - !BooleanProperty
            name: Right Front Motor Inverted
            default: false
          - !Property
            name: Right Rear Motor
            type: Actuator
            validators: [DropdownSelected]
            default: "3"
          - !BooleanProperty
            name: Right Rear Motor Inverted
            default: false
          - !DoubleProperty
            name: Sensitivity
            default: 0.5
          - !DoubleProperty
            name: Maximum Output
            default: 1
          - !BooleanProperty
            name: Safety Enabled
            default: true
          - !DoubleProperty
            name: Safety Expiration Time
            default: .1

  - Sensors:
      - !Component
        name: Gyro
        type: Sensor
        help: An analog angular rate sensor.
        properties:
          #AnalogInput("Input")
          - !DoubleProperty
            name: Sensitivity
            default: 1.25
      - !Component
        name: Accelerometer
        type: Sensor
        help: An analog acceleration sensor.
        properties:
          #AnalogInput("Input")
          - !DoubleProperty
            name: Volts Per G
            default: "1"
          - !DoubleProperty
            name: Zero G Volts
            default: 2.5
      - !Component
        name: Quadrature Encoder
        type: Sensor
        help: A digital sensor that can be used to calculate the speed and distance rotated.
        properties:
          #DigitalChannel("Channel A")
          #DigitalChannel("Channel B")
          - !BooleanProperty
            name: Reverse Direction
            default: false
          - !ChoicesProperty
            name: Encoding Type
            choices: [k4X, k2X, k1X]
            default: "k4X"
          - !DoubleProperty
            name: Distance Per Pulse
            default: 1
          - !ChoicesProperty
            name: PID Source
            choices: [kDistance, kRate]
            default: "kRate"
      - !Component
        name: Indexed Encoder
        type: Sensor
        help: A digital sensor that can be used to calculate the speed and distance rotated.
        properties:
          #DigitalChannel("Channel A")
          #DigitalChannel("Channel B")
          #DigitalChannel("Index")
          - !BooleanProperty
            name: Reverse Direction
            default: false
          - !DoubleProperty
            name: Distance Per Pulse
            default: 1
          - !ChoicesProperty
            name: PID Source
            choices: [kDistance, kRate]
            default: "kRate"
      - !Component
        name: Gear Tooth Sensor
        type: Sensor
        help: A sensor that counts the number of gear teeth that go by.
        properties:
          #DigitalChannel("Input")
          - !BooleanProperty
            name: Direction Sensitive
            default: false
      - !Component
        name: Potentiometer
        type: Sensor
        help: An rotational analog sensor that can be used to determine the position of an axle.
        properties:
          #AnalogInput("Input")
      - !Component
        name: Analog Input
        type: Sensor
        help: A generic analog input.
        properties:
          #AnalogInput("Input")
      - !Component
        name: Limit Switch
        type: Sensor
        help: A digital sensor that can be used to detect presses.
        properties:
          #DigitalChannel("Input")
      - !Component
        name: Digital Input
        type: Sensor
        help: A generic digital input.
        properties:
          #DigitalChannel("Input")
      - !Component
        name: Ultrasonic
        type: Sensor
        help: A range finding sensor based off of sound reflections.
        properties:
          #DigitalChannel("Ping")
          #DigitalChannel("Echo")

  - Actuators:
      - !Component
        name: Victor
        type: Actuator
        help: A PWM speed controller that allows you to set the speed of a motor.
        properties:
          #PWMOutput("Output")
      - !Component
        name: Jaguar
        type: Actuator
        help: A PWM speed controller that allows you to set the speed of a motor.
        properties:
          #PWMOutput("Output")
      - !Component
        name: Servo
        type: Actuator
        help: A controllable motor; typically has a limited rotation.
        properties:
          #PWMOutput("Output")
      - !Component
        name: Digital Output
        type: Actuator
        help: A simple on/off output.
        properties:
          #DigitalChannel("Output")
      - !Component
        name: Relay
        type: Actuator
        help: A motor controller that can run forwards/backwards/stopped; typically used for compressors
        properties:
          #RelayOutput("Output")


  - Pneumatics:
      - !Component
        name: Compressor
        type: Pneumatic
        help: A pneumatic compressor on your robot.
        properties:
          #DigitalChannel("Pressure Switch")
          #RelayOutput("Spike")
      - !Component
        name: Module-based Solenoid
        type: Pneumatic
        help: A linear actuator used to open and close valves that runs off of the solenoid module.
        properties:
          #Solenoid("Solenoid")
      - !Component
        name: Relay-based Solenoid
        type: Pneumatic
        help: A linear actuator used to open and close valves that runs off of a relay.
        properties:
          #RelayOutput("Spike")
      - !Component
        name: Module-based Double Solenoid
        type: Pneumatic
        help: A double-action linear actuator used to open and close valves that runs off of the Solenoid Module.
        properties:
          #Solenoid("Solenoid 1")
          #Solenoid("Solenoid 2")
      - !Component
        name: Relay-based Double Solenoid
        type: Pneumatic
        help: A double-action linear actuator used to open and close valves that runs off of a relay.
        properties:
          #RelayOutput("Spike 1")
          #RelayOutput("Spike 2")

  - OI:
      - !Component
        name: Joystick
        type: Joystick
        help: A joystick that drivers can use as input.
        properties:
          - !ChoicesProperty
            name: Number
            choices: ["1", "2", "3", "4"]
            validators: [USB Port]
            default: 1
      - !Component
        name: Joystick Button
        type: Button
        help: A joystick button that binds a driver action to a command.
        properties:
          - !Property
            name: Joystick
            type: Joystick
            default: "1"
          - !ChoicesProperty
            name: Button
            choices: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"]
            default: "1"
          #Button("")
      - !Component
        name: Kinect Stick
        type: Joystick
        help: A joystick controlled by arm movement in the Microsoft Kinect Station.  1 is the left arm, and 2 is the right arm
        properties:
          - !Property
            name: Number
            type: Integer
            choices: ["1", "2"]
            validator: KinectJoystick
            default: 1
        name: Analog Button
        type: Button
        help: A button connected to a Cypress module analog pin.
        properties:
          - !ChoicesProperty
            name: Analog Pin
            choices: ["1", "2", "3", "4", "5", "6", "7", "8"]
            default: "1"
          #Button("")
      - !Component
        name: Digital Button
        type: Button
        help: A button connected to a Cypress module digital pin.
        properties:
          - !ChoicesProperty
            name: Digital Pin
            choices: ["1", "2", "3", "4", "5", "6", "7", "8"]
            default: "1"
          #Button("")            

  - Commands:
      - !Component
        name: Command
        type: Command
        help: A command, someone really needs to update the help.
        properties:
          - !Property
            name: Requires
            type: Subsystem
            default: "None"
      - !Component
        name: Command Group
        type: Command
        help: A command group, someone really needs to update the help.
        properties:
          - !Property
            name: Requires
            type: Subsystem
            default: "None"
