## Netbeans Project Files
# - !File
#   export: $project/BSD_License_for_WPILib_code.txt
#   source: ${exporter-path}BSD_License_for_WPILib_code.txt
#   update: None

# - !File
#   export: $project/build.properties
#   source: ${exporter-path}build.properties
#   update: None

# - !File
#   export: $project/build.xml
#   source: ${exporter-path}build.xml
#   update: None

# - !File
#   export: $project/resources/META-INF/MANIFEST.MF
#   source: ${exporter-path}MANIFEST.MF
#   update: None

# - !File
#   export: $project/nbproject/project.xml
#   source: ${exporter-path}project.xml
#   update: None
  
## Key Java Files
- !File
  export: $project/Robot.cpp
  source: ${exporter-path}CommandBasedRobot.cpp
  update: Modify
  modifications:
    autonomous: ${exporter-path}RobotTemplate-autonomous.cpp
    constructors: ${exporter-path}RobotTemplate-declarations.cpp
    constructors: ${exporter-path}RobotTemplate-constructors.cpp
    
# - !File
#   export: $package-path/RobotMap.java
#   source: ${exporter-path}RobotMap.java
#   update: Overwrite
  
- !File
  export: $project/OI.cpp
  source: ${exporter-path}OI.cpp
  update: Modify
  modifications:
    constructors: ${exporter-path}OI-constructors.cpp
- !File
  export: $project/OI.h
  source: ${exporter-path}OI.h
  update: Modify
  modifications:
    declarations: ${exporter-path}OI-declarations.h

## Export Commands as files
#if ($export-commands)
#foreach ($command in $commands)
#if ($command.base.name == "Command Group")
# - !File
#   export: $package-path/commands/#class($command.name).java
#   source: ${exporter-path}CommandGroup.java
#   update: None
#   variables:
#     command-name: ${command.name}
# #elseif($command.base.name == "PID Command")
# - !File
#   export: $package-path/commands/#class($command.name).java
#   source: ${exporter-path}PIDCommand.java
#   update: Modify
#   modifications:
#     pid: ${exporter-path}PIDCommand-pid.java
#     requires: ${exporter-path}Command-requires.java
#     source: ${exporter-path}PIDCommand-source.java
#     output: ${exporter-path}PIDCommand-output.java
#   variables:
#     command-name: ${command.name}
# #else
# - !File
#   export: $package-path/commands/#class($command.name).java
#   source: ${exporter-path}Command.java
#   update: Modify
#   modifications:
#     requires: ${exporter-path}Command-requires.java
#   variables:
#     command-name: ${command.name}
#end 
#end 
#end

## Export Subsystems as files
#if ($export-subsystems)
#foreach ($subsystem in $subsystems)
#if ($subsystem.base.name == "PID Subsystem")
# - !File
#   export: $package-path/subsystems/#class($subsystem.name).java
#   source: ${exporter-path}PIDSubsystem.java
#   update: Modify
#   modifications:
#     declarations: ${exporter-path}Subsystem-declarations.java
#     default_command: ${exporter-path}Subsystem-default_command.java
#     pid: ${exporter-path}PIDSubsystem-pid.java
#     source: ${exporter-path}PIDSubsystem-source.java
#     output: ${exporter-path}PIDSubsystem-output.java
#   variables: 
#     subsystem-name: ${subsystem.name}
# #else
# - !File
#   export: $package-path/subsystems/#class($subsystem.name).java
#   source: ${exporter-path}Subsystem.java
#   update: Modify
#   modifications:
#     declarations: ${exporter-path}Subsystem-declarations.java
#     default_command: ${exporter-path}Subsystem-default_command.java
#   variables: 
#     subsystem-name: ${subsystem.name}
#end
#end
#end