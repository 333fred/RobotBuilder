#set($command = $helper.getByName($command-name, $robot))
#set($params = $command.getProperty("Parameters").getValue())
#header()

\#include "#class($command.name).h"

#if( $params.size() > 0 )
/**
 * The default constructor used to send this command to the
 * SmartDashboard and be controlled from there. Teams should not use
 * this constructor in their robot programs.
 */
#end
#class($command.name)::#class($command.name)(): Command() {
#if( $params.size() > 0)
    // Uncomment the lines below to start setting the default values of
    // the variables:
#foreach( $param in $params )
    // m_$param.getName() =
#end#end
#@autogenerated_code("requires", "    ")
#parse("${exporter-path}Command-requires.cpp")
#end
}

#@autogenerated_code("constructor", "")
#parse("${exporter-path}Command-constructor.cpp")
#end

// Called just before this Command runs the first time
void #class($command.name)::Initialize() {

}

// Called repeatedly when this Command is scheduled to run
void #class($command.name)::Execute() {

}

// Make this return true when this Command no longer needs to run execute()
bool #class($command.name)::IsFinished() {
    return false;
}

// Called once after isFinished returns true
void #class($command.name)::End() {

}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void #class($command.name)::Interrupted() {

}
